<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.25">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>admin</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.11">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2.55">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
  </actions>
  <queueId>15</queueId>
  <timestamp>1537474308684</timestamp>
  <startTime>1537474308700</startTime>
  <result>FAILURE</result>
  <duration>439</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>FAILURE</result>
    <script>node() {
    def rtMaven = Artifactory.newMavenBuild()
    def buildInfo    
    
try {
    notifyBuild(&apos;STARTED&apos;)

    stage (&apos;Pull git repositories&apos;) {
	//checkout from GitHub repository master branch to folder java_app
    checkout([$class: &apos;GitSCM&apos;, branches: [[name: &apos;*/master&apos;]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: &apos;RelativeTargetDirectory&apos;, relativeTargetDir: &apos;java_app&apos;]], submoduleCfg: [], userRemoteConfigs: [[url: &apos;https://github.com/myfear/play-java-maven&apos;]]])
    }
    stage (&apos;Artifactory configuration&apos;) {
        rtMaven.tool = MAVEN_TOOL // Tool name from Jenkins configuration
        rtMaven.deployer releaseRepo: &apos;libs-release-local&apos;, snapshotRepo: &apos;libs-snapshot-local&apos;, server: server
        rtMaven.resolver releaseRepo: &apos;libs-release&apos;, snapshotRepo: &apos;libs-snapshot&apos;, server: server
        buildInfo = Artifactory.newBuildInfo()
    }

    stage (&apos;Exec Maven&apos;) {
        rtMaven.run pom: &apos;java_app/pom.xml&apos;, goals: &apos;clean install&apos;, buildInfo: buildInfo
    }

    stage (&apos;Publish build info&apos;) {
        server.publishBuildInfo buildInfo
        
    }
} catch (e) {
// If there was an exception thrown, the build failed
currentBuild.result = &quot;FAILED&quot;
throw e
} finally {
// Success or failure, always send notifications
notifyBuild(currentBuild.result)
}
} 

def notifyBuild(String buildStatus = &apos;STARTED&apos;) {
// build status of null means successful
buildStatus =  buildStatus ?: &apos;SUCCESSFUL&apos;

//cleanWs()
emailext attachLog: true, body: &apos;&apos;&apos;$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS:

Check console output at $BUILD_URL to view the results.&apos;&apos;&apos;, 
subject: &quot;${buildStatus}: Job &apos;${env.JOB_NAME} [${env.BUILD_NUMBER}]&apos;&quot;, 
to: &apos;garegin.ayvazyan@hotmail.com&apos;
}</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>219917527</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>160386824</long>
      </entry>
      <entry>
        <string>run</string>
        <long>289598265</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>97691786</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>4895179</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>7</iota>
    <head>1:7</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>